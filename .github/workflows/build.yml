name: Test and release

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  release:
    types:
      - created

  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Get Docker Tags
        id: getDockerTag
        run: |
          # Use commit hash for stage env and version tag for prod and preprod
            echo ::set-output name=image_tag::${{github.sha}}
            echo "Setting image tag as :: ${{github.sha}}"

      # Set up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: go-docker-caching:${{ steps.getDockerTag.outputs.image_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Build, tag and push image to Amazon ECR
        run: |
          ls -alR /tmp/.buildx-cache
          cat /tmp/.buildx-cache/index.json
          # docker pull ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME }}:a108a137b8e5b8661fd29500e95874992c5a1600 || true
          docker images
          # docker build --cache-from ${{ secrets.ECR_REPO_NAME }}:a108a137b8e5b8661fd29500e95874992c5a1600 . -t ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME }}:${{ steps.getDockerTag.outputs.image_tag }}
          # docker push ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME }}:${{ steps.getDockerTag.outputs.image_tag }}

          docker buildx build --tag ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPO_NAME }}:${{ steps.getDockerTag.outputs.image_tag }} --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache,mode=max . --push
